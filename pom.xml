<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>com.training</groupId>
  <artifactId>webappdemo</artifactId>
  <packaging>war</packaging>
  <version>2.0.3</version>
  <name>Empty Spring Rest Example Project</name>
  <description>Spring boot demo</description>
  
<properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	<java.version>1.8</java.version>
	<tomcat.version>8.5.57</tomcat.version> <!-- activates spring boot internal servlet configuration when used as auto executable -->
</properties>

<distributionManagement>
    <repository>
     <id>central</id>
     <name>libs-release</name>
     <url>http://localhost:8081/artifactory/libs-release</url>
    </repository>
    <snapshotRepository>
     <id>snapshots</id>
     <name>libs-snapshot</name>
     <url>http://localhost:8081/artifactory/libs-snapshot</url>
    </snapshotRepository>
  </distributionManagement>


	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.2.RELEASE</version>
	</parent>

	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope> <!-- provided by custom Tomcat -->
		</dependency>
                <dependency>
		      <groupId>junit</groupId>
		      <artifactId>junit</artifactId>
		      <version>3.8.1</version>
		      <scope>test</scope>
		 </dependency>
                 <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-test</artifactId>
                        <scope>test</scope>
                        <exclusions>
                                <exclusion>
                                        <groupId>org.junit.vintage</groupId>
                                        <artifactId>junit-vintage-engine</artifactId>
                                </exclusion>
                        </exclusions>
                </dependency>

	</dependencies>

	<build>
		<finalName>webappdemo</finalName>
		<plugins>
			<!-- Spring boot maven plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
	      <plugins>
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-compiler-plugin</artifactId>
		  <version>3.8.1</version>
		</plugin>
		<plugin>
		  <groupId>org.sonarsource.scanner.maven</groupId>
		  <artifactId>sonar-maven-plugin</artifactId>
		  <version>3.6.0.1398</version>
		</plugin>
		<plugin>
		  <groupId>org.jacoco</groupId>
		  <artifactId>jacoco-maven-plugin</artifactId>
		  <version>0.8.4</version>
		</plugin>
	      </plugins>
	    </pluginManagement>
	</build>
<profiles>
    <profile>
      <id>coverage</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
